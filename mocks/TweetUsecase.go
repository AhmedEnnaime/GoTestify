// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	entities "github.com/AhmedEnnaime/GoTestify/entities"
	mock "github.com/stretchr/testify/mock"
)

// TweetUsecase is an autogenerated mock type for the TweetUsecase type
type TweetUsecase struct {
	mock.Mock
}

// CreateTweet provides a mock function with given fields: tweet
func (_m *TweetUsecase) CreateTweet(tweet *entities.Tweet) error {
	ret := _m.Called(tweet)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.Tweet) error); ok {
		r0 = rf(tweet)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTweetUsecase creates a new instance of TweetUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTweetUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *TweetUsecase {
	mock := &TweetUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
